{"version":3,"file":"popup.bundle.js","mappings":"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","sources":["webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/worker/browser/loadImage.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/worker/browser/spawnWorker.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/worker/browser/index.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/createJob.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/utils/resolvePaths.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/createWorker.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/constants/languages.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/utils/getId.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/Tesseract.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/constants/PSM.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/worker/browser/onMessage.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/constants/OEM.js","webpack://createcures-bloodwork-utility/./node_modules/regenerator-runtime/runtime.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/createScheduler.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/worker/browser/defaultOptions.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/index.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/utils/getEnvironment.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/constants/defaultOptions.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/worker/browser/send.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/utils/log.js","webpack://createcures-bloodwork-utility/./node_modules/tesseract.js/src/worker/browser/terminateWorker.js","webpack://createcures-bloodwork-utility/webpack/bootstrap","webpack://createcures-bloodwork-utility/./imageProcessor.js","webpack://createcures-bloodwork-utility/./popup.js"],"sourcesContent":["'use strict';\r\n\r\n/**\r\n * readFromBlobOrFile\r\n *\r\n * @name readFromBlobOrFile\r\n * @function\r\n * @access private\r\n */\r\nconst readFromBlobOrFile = (blob) => (\r\n  new Promise((resolve, reject) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      resolve(fileReader.result);\r\n    };\r\n    fileReader.onerror = ({ target: { error: { code } } }) => {\r\n      reject(Error(`File could not be read! Code=${code}`));\r\n    };\r\n    fileReader.readAsArrayBuffer(blob);\r\n  })\r\n);\r\n\r\n/**\r\n * loadImage\r\n *\r\n * @name loadImage\r\n * @function load image from different source\r\n * @access private\r\n */\r\nconst loadImage = async (image) => {\r\n  let data = image;\r\n  if (typeof image === 'undefined') {\r\n    return 'undefined';\r\n  }\r\n\r\n  if (typeof image === 'string') {\r\n    // Base64 Image\r\n    if (/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\r\n      data = atob(image.split(',')[1])\r\n        .split('')\r\n        .map((c) => c.charCodeAt(0));\r\n    } else {\r\n      const resp = await fetch(image);\r\n      data = await resp.arrayBuffer();\r\n    }\r\n  } else if (typeof HTMLElement !== 'undefined' && image instanceof HTMLElement) {\r\n    if (image.tagName === 'IMG') {\r\n      data = await loadImage(image.src);\r\n    }\r\n    if (image.tagName === 'VIDEO') {\r\n      data = await loadImage(image.poster);\r\n    }\r\n    if (image.tagName === 'CANVAS') {\r\n      await new Promise((resolve) => {\r\n        image.toBlob(async (blob) => {\r\n          data = await readFromBlobOrFile(blob);\r\n          resolve();\r\n        });\r\n      });\r\n    }\r\n  } else if (typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) {\r\n    const blob = await image.convertToBlob();\r\n    data = await readFromBlobOrFile(blob);\r\n  } else if (image instanceof File || image instanceof Blob) {\r\n    data = await readFromBlobOrFile(image);\r\n  }\r\n\r\n  return new Uint8Array(data);\r\n};\r\n\r\nmodule.exports = loadImage;\r\n","'use strict';\r\n\r\n/**\r\n * spawnWorker\r\n *\r\n * @name spawnWorker\r\n * @function create a new Worker in browser\r\n * @access public\r\n */\r\nmodule.exports = ({ workerPath, workerBlobURL }) => {\r\n  let worker;\r\n  if (Blob && URL && workerBlobURL) {\r\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\r\n      type: 'application/javascript',\r\n    });\r\n    worker = new Worker(URL.createObjectURL(blob));\r\n  } else {\r\n    worker = new Worker(workerPath);\r\n  }\r\n\r\n  return worker;\r\n};\r\n","'use strict';\r\n\r\n/**\r\n *\r\n * Tesseract Worker adapter for browser\r\n *\r\n * @fileoverview Tesseract Worker adapter for browser\r\n * @author Kevin Kwok <antimatter15@gmail.com>\r\n * @author Guillermo Webster <gui@mit.edu>\r\n * @author Jerome Wu <jeromewus@gmail.com>\r\n */\r\nconst defaultOptions = require('./defaultOptions');\r\nconst spawnWorker = require('./spawnWorker');\r\nconst terminateWorker = require('./terminateWorker');\r\nconst onMessage = require('./onMessage');\r\nconst send = require('./send');\r\nconst loadImage = require('./loadImage');\r\n\r\nmodule.exports = {\r\n  defaultOptions,\r\n  spawnWorker,\r\n  terminateWorker,\r\n  onMessage,\r\n  send,\r\n  loadImage,\r\n};\r\n","'use strict';\r\n\r\nconst getId = require('./utils/getId');\r\n\r\nlet jobCounter = 0;\r\n\r\nmodule.exports = ({\r\n  id: _id,\r\n  action,\r\n  payload = {},\r\n}) => {\r\n  let id = _id;\r\n  if (typeof id === 'undefined') {\r\n    id = getId('Job', jobCounter);\r\n    jobCounter += 1;\r\n  }\r\n\r\n  return {\r\n    id,\r\n    action,\r\n    payload,\r\n  };\r\n};\r\n","'use strict';\r\n\r\nconst isBrowser = require('./getEnvironment')('type') === 'browser';\r\n\r\nconst resolveURL = isBrowser ? s => (new URL(s, window.location.href)).href : s => s; // eslint-disable-line\r\n\r\nmodule.exports = (options) => {\r\n  const opts = { ...options };\r\n  ['corePath', 'workerPath', 'langPath'].forEach((key) => {\r\n    if (options[key]) {\r\n      opts[key] = resolveURL(opts[key]);\r\n    }\r\n  });\r\n  return opts;\r\n};\r\n","'use strict';\r\n\r\nconst resolvePaths = require('./utils/resolvePaths');\r\nconst createJob = require('./createJob');\r\nconst { log } = require('./utils/log');\r\nconst getId = require('./utils/getId');\r\nconst OEM = require('./constants/OEM');\r\nconst {\r\n  defaultOptions,\r\n  spawnWorker,\r\n  terminateWorker,\r\n  onMessage,\r\n  loadImage,\r\n  send,\r\n} = require('./worker/node');\r\n\r\nlet workerCounter = 0;\r\n\r\nmodule.exports = async (langs = 'eng', oem = OEM.LSTM_ONLY, _options = {}, config = {}) => {\r\n  const id = getId('Worker', workerCounter);\r\n  const {\r\n    logger,\r\n    errorHandler,\r\n    ...options\r\n  } = resolvePaths({\r\n    ...defaultOptions,\r\n    ..._options,\r\n  });\r\n  const promises = {};\r\n\r\n  // Current langs, oem, and config file.\r\n  // Used if the user ever re-initializes the worker using `worker.reinitialize`.\r\n  const currentLangs = typeof langs === 'string' ? langs.split('+') : langs;\r\n  let currentOem = oem;\r\n  let currentConfig = config;\r\n  const lstmOnlyCore = [OEM.DEFAULT, OEM.LSTM_ONLY].includes(oem) && !options.legacyCore;\r\n\r\n  let workerResReject;\r\n  let workerResResolve;\r\n  const workerRes = new Promise((resolve, reject) => {\r\n    workerResResolve = resolve;\r\n    workerResReject = reject;\r\n  });\r\n  const workerError = (event) => { workerResReject(event.message); };\r\n\r\n  let worker = spawnWorker(options);\r\n  worker.onerror = workerError;\r\n\r\n  workerCounter += 1;\r\n\r\n  const startJob = ({ id: jobId, action, payload }) => (\r\n    new Promise((resolve, reject) => {\r\n      log(`[${id}]: Start ${jobId}, action=${action}`);\r\n      // Using both `action` and `jobId` in case user provides non-unique `jobId`.\r\n      const promiseId = `${action}-${jobId}`;\r\n      promises[promiseId] = { resolve, reject };\r\n      send(worker, {\r\n        workerId: id,\r\n        jobId,\r\n        action,\r\n        payload,\r\n      });\r\n    })\r\n  );\r\n\r\n  const load = () => (\r\n    console.warn('`load` is depreciated and should be removed from code (workers now come pre-loaded)')\r\n  );\r\n\r\n  const loadInternal = (jobId) => (\r\n    startJob(createJob({\r\n      id: jobId, action: 'load', payload: { options: { lstmOnly: lstmOnlyCore, corePath: options.corePath, logging: options.logging } },\r\n    }))\r\n  );\r\n\r\n  const writeText = (path, text, jobId) => (\r\n    startJob(createJob({\r\n      id: jobId,\r\n      action: 'FS',\r\n      payload: { method: 'writeFile', args: [path, text] },\r\n    }))\r\n  );\r\n\r\n  const readText = (path, jobId) => (\r\n    startJob(createJob({\r\n      id: jobId,\r\n      action: 'FS',\r\n      payload: { method: 'readFile', args: [path, { encoding: 'utf8' }] },\r\n    }))\r\n  );\r\n\r\n  const removeFile = (path, jobId) => (\r\n    startJob(createJob({\r\n      id: jobId,\r\n      action: 'FS',\r\n      payload: { method: 'unlink', args: [path] },\r\n    }))\r\n  );\r\n\r\n  const FS = (method, args, jobId) => (\r\n    startJob(createJob({\r\n      id: jobId,\r\n      action: 'FS',\r\n      payload: { method, args },\r\n    }))\r\n  );\r\n\r\n  const loadLanguageInternal = (_langs, jobId) => startJob(createJob({\r\n    id: jobId,\r\n    action: 'loadLanguage',\r\n    payload: {\r\n      langs: _langs,\r\n      options: {\r\n        langPath: options.langPath,\r\n        dataPath: options.dataPath,\r\n        cachePath: options.cachePath,\r\n        cacheMethod: options.cacheMethod,\r\n        gzip: options.gzip,\r\n        lstmOnly: [OEM.DEFAULT, OEM.LSTM_ONLY].includes(currentOem)\r\n          && !options.legacyLang,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const initializeInternal = (_langs, _oem, _config, jobId) => (\r\n    startJob(createJob({\r\n      id: jobId,\r\n      action: 'initialize',\r\n      payload: { langs: _langs, oem: _oem, config: _config },\r\n    }))\r\n  );\r\n\r\n  const reinitialize = (langs = 'eng', oem, config, jobId) => { // eslint-disable-line\r\n\r\n    if (lstmOnlyCore && [OEM.TESSERACT_ONLY, OEM.TESSERACT_LSTM_COMBINED].includes(oem)) throw Error('Legacy model requested but code missing.');\r\n\r\n    const _oem = oem || currentOem;\r\n    currentOem = _oem;\r\n\r\n    const _config = config || currentConfig;\r\n    currentConfig = _config;\r\n\r\n    // Only load langs that are not already loaded.\r\n    // This logic fails if the user downloaded the LSTM-only English data for a language\r\n    // and then uses `worker.reinitialize` to switch to the Legacy engine.\r\n    // However, the correct data will still be downloaded after initialization fails\r\n    // and this can be avoided entirely if the user loads the correct data ahead of time.\r\n    const langsArr = typeof langs === 'string' ? langs.split('+') : langs;\r\n    const _langs = langsArr.filter((x) => !currentLangs.includes(x));\r\n    currentLangs.push(..._langs);\r\n\r\n    if (_langs.length > 0) {\r\n      return loadLanguageInternal(_langs, jobId)\r\n        .then(() => initializeInternal(langs, _oem, _config, jobId));\r\n    }\r\n\r\n    return initializeInternal(langs, _oem, _config, jobId);\r\n  };\r\n\r\n  const setParameters = (params = {}, jobId) => (\r\n    startJob(createJob({\r\n      id: jobId,\r\n      action: 'setParameters',\r\n      payload: { params },\r\n    }))\r\n  );\r\n\r\n  const recognize = async (image, opts = {}, output = {\r\n    text: true,\r\n  }, jobId) => (\r\n    startJob(createJob({\r\n      id: jobId,\r\n      action: 'recognize',\r\n      payload: { image: await loadImage(image), options: opts, output },\r\n    }))\r\n  );\r\n\r\n  const detect = async (image, jobId) => {\r\n    if (lstmOnlyCore) throw Error('`worker.detect` requires Legacy model, which was not loaded.');\r\n\r\n    return startJob(createJob({\r\n      id: jobId,\r\n      action: 'detect',\r\n      payload: { image: await loadImage(image) },\r\n    }));\r\n  };\r\n\r\n  const terminate = async () => {\r\n    if (worker !== null) {\r\n      /*\r\n      await startJob(createJob({\r\n        id: jobId,\r\n        action: 'terminate',\r\n      }));\r\n      */\r\n      terminateWorker(worker);\r\n      worker = null;\r\n    }\r\n    return Promise.resolve();\r\n  };\r\n\r\n  onMessage(worker, ({\r\n    workerId, jobId, status, action, data,\r\n  }) => {\r\n    const promiseId = `${action}-${jobId}`;\r\n    if (status === 'resolve') {\r\n      log(`[${workerId}]: Complete ${jobId}`);\r\n      promises[promiseId].resolve({ jobId, data });\r\n      delete promises[promiseId];\r\n    } else if (status === 'reject') {\r\n      promises[promiseId].reject(data);\r\n      delete promises[promiseId];\r\n      if (action === 'load') workerResReject(data);\r\n      if (errorHandler) {\r\n        errorHandler(data);\r\n      } else {\r\n        throw Error(data);\r\n      }\r\n    } else if (status === 'progress') {\r\n      logger({ ...data, userJobId: jobId });\r\n    }\r\n  });\r\n\r\n  const resolveObj = {\r\n    id,\r\n    worker,\r\n    load,\r\n    writeText,\r\n    readText,\r\n    removeFile,\r\n    FS,\r\n    reinitialize,\r\n    setParameters,\r\n    recognize,\r\n    detect,\r\n    terminate,\r\n  };\r\n\r\n  loadInternal()\r\n    .then(() => loadLanguageInternal(langs))\r\n    .then(() => initializeInternal(langs, oem, config))\r\n    .then(() => workerResResolve(resolveObj))\r\n    .catch(() => {});\r\n\r\n  return workerRes;\r\n};\r\n","'use strict';\r\n\r\n/*\r\n * languages with existing tesseract traineddata\r\n * https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016\r\n */\r\n\r\n/**\r\n * @typedef {object} Languages\r\n * @property {string} AFR Afrikaans\r\n * @property {string} AMH Amharic\r\n * @property {string} ARA Arabic\r\n * @property {string} ASM Assamese\r\n * @property {string} AZE Azerbaijani\r\n * @property {string} AZE_CYRL Azerbaijani - Cyrillic\r\n * @property {string} BEL Belarusian\r\n * @property {string} BEN Bengali\r\n * @property {string} BOD Tibetan\r\n * @property {string} BOS Bosnian\r\n * @property {string} BUL Bulgarian\r\n * @property {string} CAT Catalan; Valencian\r\n * @property {string} CEB Cebuano\r\n * @property {string} CES Czech\r\n * @property {string} CHI_SIM Chinese - Simplified\r\n * @property {string} CHI_TRA Chinese - Traditional\r\n * @property {string} CHR Cherokee\r\n * @property {string} CYM Welsh\r\n * @property {string} DAN Danish\r\n * @property {string} DEU German\r\n * @property {string} DZO Dzongkha\r\n * @property {string} ELL Greek, Modern (1453-)\r\n * @property {string} ENG English\r\n * @property {string} ENM English, Middle (1100-1500)\r\n * @property {string} EPO Esperanto\r\n * @property {string} EST Estonian\r\n * @property {string} EUS Basque\r\n * @property {string} FAS Persian\r\n * @property {string} FIN Finnish\r\n * @property {string} FRA French\r\n * @property {string} FRK German Fraktur\r\n * @property {string} FRM French, Middle (ca. 1400-1600)\r\n * @property {string} GLE Irish\r\n * @property {string} GLG Galician\r\n * @property {string} GRC Greek, Ancient (-1453)\r\n * @property {string} GUJ Gujarati\r\n * @property {string} HAT Haitian; Haitian Creole\r\n * @property {string} HEB Hebrew\r\n * @property {string} HIN Hindi\r\n * @property {string} HRV Croatian\r\n * @property {string} HUN Hungarian\r\n * @property {string} IKU Inuktitut\r\n * @property {string} IND Indonesian\r\n * @property {string} ISL Icelandic\r\n * @property {string} ITA Italian\r\n * @property {string} ITA_OLD Italian - Old\r\n * @property {string} JAV Javanese\r\n * @property {string} JPN Japanese\r\n * @property {string} KAN Kannada\r\n * @property {string} KAT Georgian\r\n * @property {string} KAT_OLD Georgian - Old\r\n * @property {string} KAZ Kazakh\r\n * @property {string} KHM Central Khmer\r\n * @property {string} KIR Kirghiz; Kyrgyz\r\n * @property {string} KOR Korean\r\n * @property {string} KUR Kurdish\r\n * @property {string} LAO Lao\r\n * @property {string} LAT Latin\r\n * @property {string} LAV Latvian\r\n * @property {string} LIT Lithuanian\r\n * @property {string} MAL Malayalam\r\n * @property {string} MAR Marathi\r\n * @property {string} MKD Macedonian\r\n * @property {string} MLT Maltese\r\n * @property {string} MSA Malay\r\n * @property {string} MYA Burmese\r\n * @property {string} NEP Nepali\r\n * @property {string} NLD Dutch; Flemish\r\n * @property {string} NOR Norwegian\r\n * @property {string} ORI Oriya\r\n * @property {string} PAN Panjabi; Punjabi\r\n * @property {string} POL Polish\r\n * @property {string} POR Portuguese\r\n * @property {string} PUS Pushto; Pashto\r\n * @property {string} RON Romanian; Moldavian; Moldovan\r\n * @property {string} RUS Russian\r\n * @property {string} SAN Sanskrit\r\n * @property {string} SIN Sinhala; Sinhalese\r\n * @property {string} SLK Slovak\r\n * @property {string} SLV Slovenian\r\n * @property {string} SPA Spanish; Castilian\r\n * @property {string} SPA_OLD Spanish; Castilian - Old\r\n * @property {string} SQI Albanian\r\n * @property {string} SRP Serbian\r\n * @property {string} SRP_LATN Serbian - Latin\r\n * @property {string} SWA Swahili\r\n * @property {string} SWE Swedish\r\n * @property {string} SYR Syriac\r\n * @property {string} TAM Tamil\r\n * @property {string} TEL Telugu\r\n * @property {string} TGK Tajik\r\n * @property {string} TGL Tagalog\r\n * @property {string} THA Thai\r\n * @property {string} TIR Tigrinya\r\n * @property {string} TUR Turkish\r\n * @property {string} UIG Uighur; Uyghur\r\n * @property {string} UKR Ukrainian\r\n * @property {string} URD Urdu\r\n * @property {string} UZB Uzbek\r\n * @property {string} UZB_CYRL Uzbek - Cyrillic\r\n * @property {string} VIE Vietnamese\r\n * @property {string} YID Yiddish\r\n */\r\n\r\n/**\r\n  * @type {Languages}\r\n  */\r\nmodule.exports = {\r\n  AFR: 'afr',\r\n  AMH: 'amh',\r\n  ARA: 'ara',\r\n  ASM: 'asm',\r\n  AZE: 'aze',\r\n  AZE_CYRL: 'aze_cyrl',\r\n  BEL: 'bel',\r\n  BEN: 'ben',\r\n  BOD: 'bod',\r\n  BOS: 'bos',\r\n  BUL: 'bul',\r\n  CAT: 'cat',\r\n  CEB: 'ceb',\r\n  CES: 'ces',\r\n  CHI_SIM: 'chi_sim',\r\n  CHI_TRA: 'chi_tra',\r\n  CHR: 'chr',\r\n  CYM: 'cym',\r\n  DAN: 'dan',\r\n  DEU: 'deu',\r\n  DZO: 'dzo',\r\n  ELL: 'ell',\r\n  ENG: 'eng',\r\n  ENM: 'enm',\r\n  EPO: 'epo',\r\n  EST: 'est',\r\n  EUS: 'eus',\r\n  FAS: 'fas',\r\n  FIN: 'fin',\r\n  FRA: 'fra',\r\n  FRK: 'frk',\r\n  FRM: 'frm',\r\n  GLE: 'gle',\r\n  GLG: 'glg',\r\n  GRC: 'grc',\r\n  GUJ: 'guj',\r\n  HAT: 'hat',\r\n  HEB: 'heb',\r\n  HIN: 'hin',\r\n  HRV: 'hrv',\r\n  HUN: 'hun',\r\n  IKU: 'iku',\r\n  IND: 'ind',\r\n  ISL: 'isl',\r\n  ITA: 'ita',\r\n  ITA_OLD: 'ita_old',\r\n  JAV: 'jav',\r\n  JPN: 'jpn',\r\n  KAN: 'kan',\r\n  KAT: 'kat',\r\n  KAT_OLD: 'kat_old',\r\n  KAZ: 'kaz',\r\n  KHM: 'khm',\r\n  KIR: 'kir',\r\n  KOR: 'kor',\r\n  KUR: 'kur',\r\n  LAO: 'lao',\r\n  LAT: 'lat',\r\n  LAV: 'lav',\r\n  LIT: 'lit',\r\n  MAL: 'mal',\r\n  MAR: 'mar',\r\n  MKD: 'mkd',\r\n  MLT: 'mlt',\r\n  MSA: 'msa',\r\n  MYA: 'mya',\r\n  NEP: 'nep',\r\n  NLD: 'nld',\r\n  NOR: 'nor',\r\n  ORI: 'ori',\r\n  PAN: 'pan',\r\n  POL: 'pol',\r\n  POR: 'por',\r\n  PUS: 'pus',\r\n  RON: 'ron',\r\n  RUS: 'rus',\r\n  SAN: 'san',\r\n  SIN: 'sin',\r\n  SLK: 'slk',\r\n  SLV: 'slv',\r\n  SPA: 'spa',\r\n  SPA_OLD: 'spa_old',\r\n  SQI: 'sqi',\r\n  SRP: 'srp',\r\n  SRP_LATN: 'srp_latn',\r\n  SWA: 'swa',\r\n  SWE: 'swe',\r\n  SYR: 'syr',\r\n  TAM: 'tam',\r\n  TEL: 'tel',\r\n  TGK: 'tgk',\r\n  TGL: 'tgl',\r\n  THA: 'tha',\r\n  TIR: 'tir',\r\n  TUR: 'tur',\r\n  UIG: 'uig',\r\n  UKR: 'ukr',\r\n  URD: 'urd',\r\n  UZB: 'uzb',\r\n  UZB_CYRL: 'uzb_cyrl',\r\n  VIE: 'vie',\r\n  YID: 'yid',\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = (prefix, cnt) => (\r\n  `${prefix}-${cnt}-${Math.random().toString(16).slice(3, 8)}`\r\n);\r\n","'use strict';\r\n\r\nconst createWorker = require('./createWorker');\r\n\r\nconst recognize = async (image, langs, options) => {\r\n  const worker = await createWorker(langs, 1, options);\r\n  return worker.recognize(image)\r\n    .finally(async () => {\r\n      await worker.terminate();\r\n    });\r\n};\r\n\r\nconst detect = async (image, options) => {\r\n  const worker = await createWorker('osd', 0, options);\r\n  return worker.detect(image)\r\n    .finally(async () => {\r\n      await worker.terminate();\r\n    });\r\n};\r\n\r\nmodule.exports = {\r\n  recognize,\r\n  detect,\r\n};\r\n","'use strict';\r\n\r\n/*\r\n * PSM = Page Segmentation Mode\r\n */\r\nmodule.exports = {\r\n  OSD_ONLY: '0',\r\n  AUTO_OSD: '1',\r\n  AUTO_ONLY: '2',\r\n  AUTO: '3',\r\n  SINGLE_COLUMN: '4',\r\n  SINGLE_BLOCK_VERT_TEXT: '5',\r\n  SINGLE_BLOCK: '6',\r\n  SINGLE_LINE: '7',\r\n  SINGLE_WORD: '8',\r\n  CIRCLE_WORD: '9',\r\n  SINGLE_CHAR: '10',\r\n  SPARSE_TEXT: '11',\r\n  SPARSE_TEXT_OSD: '12',\r\n  RAW_LINE: '13',\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = (worker, handler) => {\r\n  worker.onmessage = ({ data }) => { // eslint-disable-line\r\n    handler(data);\r\n  };\r\n};\r\n","'use strict';\r\n\r\n/*\r\n * OEM = OCR Engine Mode, and there are 4 possible modes.\r\n *\r\n * By default tesseract.js uses LSTM_ONLY mode.\r\n *\r\n */\r\nmodule.exports = {\r\n  TESSERACT_ONLY: 0,\r\n  LSTM_ONLY: 1,\r\n  TESSERACT_LSTM_COMBINED: 2,\r\n  DEFAULT: 3,\r\n};\r\n","/**\r\n * Copyright (c) 2014-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nvar runtime = (function (exports) {\r\n  \"use strict\";\r\n\r\n  var Op = Object.prototype;\r\n  var hasOwn = Op.hasOwnProperty;\r\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\r\n  var undefined; // More compressible than void 0.\r\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\r\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\r\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\r\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\r\n\r\n  function define(obj, key, value) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n    return obj[key];\r\n  }\r\n  try {\r\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\r\n    define({}, \"\");\r\n  } catch (err) {\r\n    define = function(obj, key, value) {\r\n      return obj[key] = value;\r\n    };\r\n  }\r\n\r\n  function wrap(innerFn, outerFn, self, tryLocsList) {\r\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\r\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\r\n    var generator = Object.create(protoGenerator.prototype);\r\n    var context = new Context(tryLocsList || []);\r\n\r\n    // The ._invoke method unifies the implementations of the .next,\r\n    // .throw, and .return methods.\r\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\r\n\r\n    return generator;\r\n  }\r\n  exports.wrap = wrap;\r\n\r\n  // Try/catch helper to minimize deoptimizations. Returns a completion\r\n  // record like context.tryEntries[i].completion. This interface could\r\n  // have been (and was previously) designed to take a closure to be\r\n  // invoked without arguments, but in all the cases we care about we\r\n  // already have an existing method we want to call, so there's no need\r\n  // to create a new function object. We can even get away with assuming\r\n  // the method takes exactly one argument, since that happens to be true\r\n  // in every case, so we don't have to touch the arguments object. The\r\n  // only additional allocation required is the completion record, which\r\n  // has a stable shape and so hopefully should be cheap to allocate.\r\n  function tryCatch(fn, obj, arg) {\r\n    try {\r\n      return { type: \"normal\", arg: fn.call(obj, arg) };\r\n    } catch (err) {\r\n      return { type: \"throw\", arg: err };\r\n    }\r\n  }\r\n\r\n  var GenStateSuspendedStart = \"suspendedStart\";\r\n  var GenStateSuspendedYield = \"suspendedYield\";\r\n  var GenStateExecuting = \"executing\";\r\n  var GenStateCompleted = \"completed\";\r\n\r\n  // Returning this object from the innerFn has the same effect as\r\n  // breaking out of the dispatch switch statement.\r\n  var ContinueSentinel = {};\r\n\r\n  // Dummy constructor functions that we use as the .constructor and\r\n  // .constructor.prototype properties for functions that return Generator\r\n  // objects. For full spec compliance, you may wish to configure your\r\n  // minifier not to mangle the names of these two functions.\r\n  function Generator() {}\r\n  function GeneratorFunction() {}\r\n  function GeneratorFunctionPrototype() {}\r\n\r\n  // This is a polyfill for %IteratorPrototype% for environments that\r\n  // don't natively support it.\r\n  var IteratorPrototype = {};\r\n  define(IteratorPrototype, iteratorSymbol, function () {\r\n    return this;\r\n  });\r\n\r\n  var getProto = Object.getPrototypeOf;\r\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\r\n  if (NativeIteratorPrototype &&\r\n      NativeIteratorPrototype !== Op &&\r\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\r\n    // This environment has a native %IteratorPrototype%; use it instead\r\n    // of the polyfill.\r\n    IteratorPrototype = NativeIteratorPrototype;\r\n  }\r\n\r\n  var Gp = GeneratorFunctionPrototype.prototype =\r\n    Generator.prototype = Object.create(IteratorPrototype);\r\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\r\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\r\n  defineProperty(\r\n    GeneratorFunctionPrototype,\r\n    \"constructor\",\r\n    { value: GeneratorFunction, configurable: true }\r\n  );\r\n  GeneratorFunction.displayName = define(\r\n    GeneratorFunctionPrototype,\r\n    toStringTagSymbol,\r\n    \"GeneratorFunction\"\r\n  );\r\n\r\n  // Helper for defining the .next, .throw, and .return methods of the\r\n  // Iterator interface in terms of a single ._invoke method.\r\n  function defineIteratorMethods(prototype) {\r\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\r\n      define(prototype, method, function(arg) {\r\n        return this._invoke(method, arg);\r\n      });\r\n    });\r\n  }\r\n\r\n  exports.isGeneratorFunction = function(genFun) {\r\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\r\n    return ctor\r\n      ? ctor === GeneratorFunction ||\r\n        // For the native GeneratorFunction constructor, the best we can\r\n        // do is to check its .name property.\r\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\r\n      : false;\r\n  };\r\n\r\n  exports.mark = function(genFun) {\r\n    if (Object.setPrototypeOf) {\r\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\r\n    } else {\r\n      genFun.__proto__ = GeneratorFunctionPrototype;\r\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\r\n    }\r\n    genFun.prototype = Object.create(Gp);\r\n    return genFun;\r\n  };\r\n\r\n  // Within the body of any async function, `await x` is transformed to\r\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\r\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\r\n  // meant to be awaited.\r\n  exports.awrap = function(arg) {\r\n    return { __await: arg };\r\n  };\r\n\r\n  function AsyncIterator(generator, PromiseImpl) {\r\n    function invoke(method, arg, resolve, reject) {\r\n      var record = tryCatch(generator[method], generator, arg);\r\n      if (record.type === \"throw\") {\r\n        reject(record.arg);\r\n      } else {\r\n        var result = record.arg;\r\n        var value = result.value;\r\n        if (value &&\r\n            typeof value === \"object\" &&\r\n            hasOwn.call(value, \"__await\")) {\r\n          return PromiseImpl.resolve(value.__await).then(function(value) {\r\n            invoke(\"next\", value, resolve, reject);\r\n          }, function(err) {\r\n            invoke(\"throw\", err, resolve, reject);\r\n          });\r\n        }\r\n\r\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\r\n          // When a yielded Promise is resolved, its final value becomes\r\n          // the .value of the Promise<{value,done}> result for the\r\n          // current iteration.\r\n          result.value = unwrapped;\r\n          resolve(result);\r\n        }, function(error) {\r\n          // If a rejected Promise was yielded, throw the rejection back\r\n          // into the async generator function so it can be handled there.\r\n          return invoke(\"throw\", error, resolve, reject);\r\n        });\r\n      }\r\n    }\r\n\r\n    var previousPromise;\r\n\r\n    function enqueue(method, arg) {\r\n      function callInvokeWithMethodAndArg() {\r\n        return new PromiseImpl(function(resolve, reject) {\r\n          invoke(method, arg, resolve, reject);\r\n        });\r\n      }\r\n\r\n      return previousPromise =\r\n        // If enqueue has been called before, then we want to wait until\r\n        // all previous Promises have been resolved before calling invoke,\r\n        // so that results are always delivered in the correct order. If\r\n        // enqueue has not been called before, then it is important to\r\n        // call invoke immediately, without waiting on a callback to fire,\r\n        // so that the async generator function has the opportunity to do\r\n        // any necessary setup in a predictable way. This predictability\r\n        // is why the Promise constructor synchronously invokes its\r\n        // executor callback, and why async functions synchronously\r\n        // execute code before the first await. Since we implement simple\r\n        // async functions in terms of async generators, it is especially\r\n        // important to get this right, even though it requires care.\r\n        previousPromise ? previousPromise.then(\r\n          callInvokeWithMethodAndArg,\r\n          // Avoid propagating failures to Promises returned by later\r\n          // invocations of the iterator.\r\n          callInvokeWithMethodAndArg\r\n        ) : callInvokeWithMethodAndArg();\r\n    }\r\n\r\n    // Define the unified helper method that is used to implement .next,\r\n    // .throw, and .return (see defineIteratorMethods).\r\n    defineProperty(this, \"_invoke\", { value: enqueue });\r\n  }\r\n\r\n  defineIteratorMethods(AsyncIterator.prototype);\r\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\r\n    return this;\r\n  });\r\n  exports.AsyncIterator = AsyncIterator;\r\n\r\n  // Note that simple async functions are implemented on top of\r\n  // AsyncIterator objects; they just return a Promise for the value of\r\n  // the final result produced by the iterator.\r\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\r\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\r\n\r\n    var iter = new AsyncIterator(\r\n      wrap(innerFn, outerFn, self, tryLocsList),\r\n      PromiseImpl\r\n    );\r\n\r\n    return exports.isGeneratorFunction(outerFn)\r\n      ? iter // If outerFn is a generator, return the full iterator.\r\n      : iter.next().then(function(result) {\r\n          return result.done ? result.value : iter.next();\r\n        });\r\n  };\r\n\r\n  function makeInvokeMethod(innerFn, self, context) {\r\n    var state = GenStateSuspendedStart;\r\n\r\n    return function invoke(method, arg) {\r\n      if (state === GenStateExecuting) {\r\n        throw new Error(\"Generator is already running\");\r\n      }\r\n\r\n      if (state === GenStateCompleted) {\r\n        if (method === \"throw\") {\r\n          throw arg;\r\n        }\r\n\r\n        // Be forgiving, per 25.3.3.3.3 of the spec:\r\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\r\n        return doneResult();\r\n      }\r\n\r\n      context.method = method;\r\n      context.arg = arg;\r\n\r\n      while (true) {\r\n        var delegate = context.delegate;\r\n        if (delegate) {\r\n          var delegateResult = maybeInvokeDelegate(delegate, context);\r\n          if (delegateResult) {\r\n            if (delegateResult === ContinueSentinel) continue;\r\n            return delegateResult;\r\n          }\r\n        }\r\n\r\n        if (context.method === \"next\") {\r\n          // Setting context._sent for legacy support of Babel's\r\n          // function.sent implementation.\r\n          context.sent = context._sent = context.arg;\r\n\r\n        } else if (context.method === \"throw\") {\r\n          if (state === GenStateSuspendedStart) {\r\n            state = GenStateCompleted;\r\n            throw context.arg;\r\n          }\r\n\r\n          context.dispatchException(context.arg);\r\n\r\n        } else if (context.method === \"return\") {\r\n          context.abrupt(\"return\", context.arg);\r\n        }\r\n\r\n        state = GenStateExecuting;\r\n\r\n        var record = tryCatch(innerFn, self, context);\r\n        if (record.type === \"normal\") {\r\n          // If an exception is thrown from innerFn, we leave state ===\r\n          // GenStateExecuting and loop back for another invocation.\r\n          state = context.done\r\n            ? GenStateCompleted\r\n            : GenStateSuspendedYield;\r\n\r\n          if (record.arg === ContinueSentinel) {\r\n            continue;\r\n          }\r\n\r\n          return {\r\n            value: record.arg,\r\n            done: context.done\r\n          };\r\n\r\n        } else if (record.type === \"throw\") {\r\n          state = GenStateCompleted;\r\n          // Dispatch the exception by looping back around to the\r\n          // context.dispatchException(context.arg) call above.\r\n          context.method = \"throw\";\r\n          context.arg = record.arg;\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  // Call delegate.iterator[context.method](context.arg) and handle the\r\n  // result, either by returning a { value, done } result from the\r\n  // delegate iterator, or by modifying context.method and context.arg,\r\n  // setting context.delegate to null, and returning the ContinueSentinel.\r\n  function maybeInvokeDelegate(delegate, context) {\r\n    var methodName = context.method;\r\n    var method = delegate.iterator[methodName];\r\n    if (method === undefined) {\r\n      // A .throw or .return when the delegate iterator has no .throw\r\n      // method, or a missing .next mehtod, always terminate the\r\n      // yield* loop.\r\n      context.delegate = null;\r\n\r\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\r\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\r\n        // If the delegate iterator has a return method, give it a\r\n        // chance to clean up.\r\n        context.method = \"return\";\r\n        context.arg = undefined;\r\n        maybeInvokeDelegate(delegate, context);\r\n\r\n        if (context.method === \"throw\") {\r\n          // If maybeInvokeDelegate(context) changed context.method from\r\n          // \"return\" to \"throw\", let that override the TypeError below.\r\n          return ContinueSentinel;\r\n        }\r\n      }\r\n      if (methodName !== \"return\") {\r\n        context.method = \"throw\";\r\n        context.arg = new TypeError(\r\n          \"The iterator does not provide a '\" + methodName + \"' method\");\r\n      }\r\n\r\n      return ContinueSentinel;\r\n    }\r\n\r\n    var record = tryCatch(method, delegate.iterator, context.arg);\r\n\r\n    if (record.type === \"throw\") {\r\n      context.method = \"throw\";\r\n      context.arg = record.arg;\r\n      context.delegate = null;\r\n      return ContinueSentinel;\r\n    }\r\n\r\n    var info = record.arg;\r\n\r\n    if (! info) {\r\n      context.method = \"throw\";\r\n      context.arg = new TypeError(\"iterator result is not an object\");\r\n      context.delegate = null;\r\n      return ContinueSentinel;\r\n    }\r\n\r\n    if (info.done) {\r\n      // Assign the result of the finished delegate to the temporary\r\n      // variable specified by delegate.resultName (see delegateYield).\r\n      context[delegate.resultName] = info.value;\r\n\r\n      // Resume execution at the desired location (see delegateYield).\r\n      context.next = delegate.nextLoc;\r\n\r\n      // If context.method was \"throw\" but the delegate handled the\r\n      // exception, let the outer generator proceed normally. If\r\n      // context.method was \"next\", forget context.arg since it has been\r\n      // \"consumed\" by the delegate iterator. If context.method was\r\n      // \"return\", allow the original .return call to continue in the\r\n      // outer generator.\r\n      if (context.method !== \"return\") {\r\n        context.method = \"next\";\r\n        context.arg = undefined;\r\n      }\r\n\r\n    } else {\r\n      // Re-yield the result returned by the delegate method.\r\n      return info;\r\n    }\r\n\r\n    // The delegate iterator is finished, so forget it and continue with\r\n    // the outer generator.\r\n    context.delegate = null;\r\n    return ContinueSentinel;\r\n  }\r\n\r\n  // Define Generator.prototype.{next,throw,return} in terms of the\r\n  // unified ._invoke helper method.\r\n  defineIteratorMethods(Gp);\r\n\r\n  define(Gp, toStringTagSymbol, \"Generator\");\r\n\r\n  // A Generator should always return itself as the iterator object when the\r\n  // @@iterator function is called on it. Some browsers' implementations of the\r\n  // iterator prototype chain incorrectly implement this, causing the Generator\r\n  // object to not be returned from this call. This ensures that doesn't happen.\r\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\r\n  define(Gp, iteratorSymbol, function() {\r\n    return this;\r\n  });\r\n\r\n  define(Gp, \"toString\", function() {\r\n    return \"[object Generator]\";\r\n  });\r\n\r\n  function pushTryEntry(locs) {\r\n    var entry = { tryLoc: locs[0] };\r\n\r\n    if (1 in locs) {\r\n      entry.catchLoc = locs[1];\r\n    }\r\n\r\n    if (2 in locs) {\r\n      entry.finallyLoc = locs[2];\r\n      entry.afterLoc = locs[3];\r\n    }\r\n\r\n    this.tryEntries.push(entry);\r\n  }\r\n\r\n  function resetTryEntry(entry) {\r\n    var record = entry.completion || {};\r\n    record.type = \"normal\";\r\n    delete record.arg;\r\n    entry.completion = record;\r\n  }\r\n\r\n  function Context(tryLocsList) {\r\n    // The root entry object (effectively a try statement without a catch\r\n    // or a finally block) gives us a place to store values thrown from\r\n    // locations where there is no enclosing try statement.\r\n    this.tryEntries = [{ tryLoc: \"root\" }];\r\n    tryLocsList.forEach(pushTryEntry, this);\r\n    this.reset(true);\r\n  }\r\n\r\n  exports.keys = function(val) {\r\n    var object = Object(val);\r\n    var keys = [];\r\n    for (var key in object) {\r\n      keys.push(key);\r\n    }\r\n    keys.reverse();\r\n\r\n    // Rather than returning an object with a next method, we keep\r\n    // things simple and return the next function itself.\r\n    return function next() {\r\n      while (keys.length) {\r\n        var key = keys.pop();\r\n        if (key in object) {\r\n          next.value = key;\r\n          next.done = false;\r\n          return next;\r\n        }\r\n      }\r\n\r\n      // To avoid creating an additional object, we just hang the .value\r\n      // and .done properties off the next function object itself. This\r\n      // also ensures that the minifier will not anonymize the function.\r\n      next.done = true;\r\n      return next;\r\n    };\r\n  };\r\n\r\n  function values(iterable) {\r\n    if (iterable) {\r\n      var iteratorMethod = iterable[iteratorSymbol];\r\n      if (iteratorMethod) {\r\n        return iteratorMethod.call(iterable);\r\n      }\r\n\r\n      if (typeof iterable.next === \"function\") {\r\n        return iterable;\r\n      }\r\n\r\n      if (!isNaN(iterable.length)) {\r\n        var i = -1, next = function next() {\r\n          while (++i < iterable.length) {\r\n            if (hasOwn.call(iterable, i)) {\r\n              next.value = iterable[i];\r\n              next.done = false;\r\n              return next;\r\n            }\r\n          }\r\n\r\n          next.value = undefined;\r\n          next.done = true;\r\n\r\n          return next;\r\n        };\r\n\r\n        return next.next = next;\r\n      }\r\n    }\r\n\r\n    // Return an iterator with no values.\r\n    return { next: doneResult };\r\n  }\r\n  exports.values = values;\r\n\r\n  function doneResult() {\r\n    return { value: undefined, done: true };\r\n  }\r\n\r\n  Context.prototype = {\r\n    constructor: Context,\r\n\r\n    reset: function(skipTempReset) {\r\n      this.prev = 0;\r\n      this.next = 0;\r\n      // Resetting context._sent for legacy support of Babel's\r\n      // function.sent implementation.\r\n      this.sent = this._sent = undefined;\r\n      this.done = false;\r\n      this.delegate = null;\r\n\r\n      this.method = \"next\";\r\n      this.arg = undefined;\r\n\r\n      this.tryEntries.forEach(resetTryEntry);\r\n\r\n      if (!skipTempReset) {\r\n        for (var name in this) {\r\n          // Not sure about the optimal order of these conditions:\r\n          if (name.charAt(0) === \"t\" &&\r\n              hasOwn.call(this, name) &&\r\n              !isNaN(+name.slice(1))) {\r\n            this[name] = undefined;\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    stop: function() {\r\n      this.done = true;\r\n\r\n      var rootEntry = this.tryEntries[0];\r\n      var rootRecord = rootEntry.completion;\r\n      if (rootRecord.type === \"throw\") {\r\n        throw rootRecord.arg;\r\n      }\r\n\r\n      return this.rval;\r\n    },\r\n\r\n    dispatchException: function(exception) {\r\n      if (this.done) {\r\n        throw exception;\r\n      }\r\n\r\n      var context = this;\r\n      function handle(loc, caught) {\r\n        record.type = \"throw\";\r\n        record.arg = exception;\r\n        context.next = loc;\r\n\r\n        if (caught) {\r\n          // If the dispatched exception was caught by a catch block,\r\n          // then let that catch block handle the exception normally.\r\n          context.method = \"next\";\r\n          context.arg = undefined;\r\n        }\r\n\r\n        return !! caught;\r\n      }\r\n\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i];\r\n        var record = entry.completion;\r\n\r\n        if (entry.tryLoc === \"root\") {\r\n          // Exception thrown outside of any try block that could handle\r\n          // it, so set the completion value of the entire function to\r\n          // throw the exception.\r\n          return handle(\"end\");\r\n        }\r\n\r\n        if (entry.tryLoc <= this.prev) {\r\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\r\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\r\n\r\n          if (hasCatch && hasFinally) {\r\n            if (this.prev < entry.catchLoc) {\r\n              return handle(entry.catchLoc, true);\r\n            } else if (this.prev < entry.finallyLoc) {\r\n              return handle(entry.finallyLoc);\r\n            }\r\n\r\n          } else if (hasCatch) {\r\n            if (this.prev < entry.catchLoc) {\r\n              return handle(entry.catchLoc, true);\r\n            }\r\n\r\n          } else if (hasFinally) {\r\n            if (this.prev < entry.finallyLoc) {\r\n              return handle(entry.finallyLoc);\r\n            }\r\n\r\n          } else {\r\n            throw new Error(\"try statement without catch or finally\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    abrupt: function(type, arg) {\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i];\r\n        if (entry.tryLoc <= this.prev &&\r\n            hasOwn.call(entry, \"finallyLoc\") &&\r\n            this.prev < entry.finallyLoc) {\r\n          var finallyEntry = entry;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (finallyEntry &&\r\n          (type === \"break\" ||\r\n           type === \"continue\") &&\r\n          finallyEntry.tryLoc <= arg &&\r\n          arg <= finallyEntry.finallyLoc) {\r\n        // Ignore the finally entry if control is not jumping to a\r\n        // location outside the try/catch block.\r\n        finallyEntry = null;\r\n      }\r\n\r\n      var record = finallyEntry ? finallyEntry.completion : {};\r\n      record.type = type;\r\n      record.arg = arg;\r\n\r\n      if (finallyEntry) {\r\n        this.method = \"next\";\r\n        this.next = finallyEntry.finallyLoc;\r\n        return ContinueSentinel;\r\n      }\r\n\r\n      return this.complete(record);\r\n    },\r\n\r\n    complete: function(record, afterLoc) {\r\n      if (record.type === \"throw\") {\r\n        throw record.arg;\r\n      }\r\n\r\n      if (record.type === \"break\" ||\r\n          record.type === \"continue\") {\r\n        this.next = record.arg;\r\n      } else if (record.type === \"return\") {\r\n        this.rval = this.arg = record.arg;\r\n        this.method = \"return\";\r\n        this.next = \"end\";\r\n      } else if (record.type === \"normal\" && afterLoc) {\r\n        this.next = afterLoc;\r\n      }\r\n\r\n      return ContinueSentinel;\r\n    },\r\n\r\n    finish: function(finallyLoc) {\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i];\r\n        if (entry.finallyLoc === finallyLoc) {\r\n          this.complete(entry.completion, entry.afterLoc);\r\n          resetTryEntry(entry);\r\n          return ContinueSentinel;\r\n        }\r\n      }\r\n    },\r\n\r\n    \"catch\": function(tryLoc) {\r\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\r\n        var entry = this.tryEntries[i];\r\n        if (entry.tryLoc === tryLoc) {\r\n          var record = entry.completion;\r\n          if (record.type === \"throw\") {\r\n            var thrown = record.arg;\r\n            resetTryEntry(entry);\r\n          }\r\n          return thrown;\r\n        }\r\n      }\r\n\r\n      // The context.catch method must only be called with a location\r\n      // argument that corresponds to a known catch block.\r\n      throw new Error(\"illegal catch attempt\");\r\n    },\r\n\r\n    delegateYield: function(iterable, resultName, nextLoc) {\r\n      this.delegate = {\r\n        iterator: values(iterable),\r\n        resultName: resultName,\r\n        nextLoc: nextLoc\r\n      };\r\n\r\n      if (this.method === \"next\") {\r\n        // Deliberately forget the last sent value so that we don't\r\n        // accidentally pass it on to the delegate.\r\n        this.arg = undefined;\r\n      }\r\n\r\n      return ContinueSentinel;\r\n    }\r\n  };\r\n\r\n  // Regardless of whether this script is executing as a CommonJS module\r\n  // or not, return the runtime object so that we can declare the variable\r\n  // regeneratorRuntime in the outer scope, which allows this module to be\r\n  // injected easily by `bin/regenerator --include-runtime script.js`.\r\n  return exports;\r\n\r\n}(\r\n  // If this script is executing as a CommonJS module, use module.exports\r\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\r\n  // object. Either way, the resulting object will be used to initialize\r\n  // the regeneratorRuntime variable at the top of this file.\r\n  typeof module === \"object\" ? module.exports : {}\r\n));\r\n\r\ntry {\r\n  regeneratorRuntime = runtime;\r\n} catch (accidentalStrictMode) {\r\n  // This module should not be running in strict mode, so the above\r\n  // assignment should always work unless something is misconfigured. Just\r\n  // in case runtime.js accidentally runs in strict mode, in modern engines\r\n  // we can explicitly access globalThis. In older engines we can escape\r\n  // strict mode using a global Function call. This could conceivably fail\r\n  // if a Content Security Policy forbids using Function, but in that case\r\n  // the proper solution is to fix the accidental strict mode problem. If\r\n  // you've misconfigured your bundler to force strict mode and applied a\r\n  // CSP to forbid Function, and you're not willing to fix either of those\r\n  // problems, please detail your unique predicament in a GitHub issue.\r\n  if (typeof globalThis === \"object\") {\r\n    globalThis.regeneratorRuntime = runtime;\r\n  } else {\r\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\r\n  }\r\n}\r\n","'use strict';\r\n\r\nconst createJob = require('./createJob');\r\nconst { log } = require('./utils/log');\r\nconst getId = require('./utils/getId');\r\n\r\nlet schedulerCounter = 0;\r\n\r\nmodule.exports = () => {\r\n  const id = getId('Scheduler', schedulerCounter);\r\n  const workers = {};\r\n  const runningWorkers = {};\r\n  let jobQueue = [];\r\n\r\n  schedulerCounter += 1;\r\n\r\n  const getQueueLen = () => jobQueue.length;\r\n  const getNumWorkers = () => Object.keys(workers).length;\r\n\r\n  const dequeue = () => {\r\n    if (jobQueue.length !== 0) {\r\n      const wIds = Object.keys(workers);\r\n      for (let i = 0; i < wIds.length; i += 1) {\r\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\r\n          jobQueue[0](workers[wIds[i]]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const queue = (action, payload) => (\r\n    new Promise((resolve, reject) => {\r\n      const job = createJob({ action, payload });\r\n      jobQueue.push(async (w) => {\r\n        jobQueue.shift();\r\n        runningWorkers[w.id] = job;\r\n        try {\r\n          resolve(await w[action].apply(this, [...payload, job.id]));\r\n        } catch (err) {\r\n          reject(err);\r\n        } finally {\r\n          delete runningWorkers[w.id];\r\n          dequeue();\r\n        }\r\n      });\r\n      log(`[${id}]: Add ${job.id} to JobQueue`);\r\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\r\n      dequeue();\r\n    })\r\n  );\r\n\r\n  const addWorker = (w) => {\r\n    workers[w.id] = w;\r\n    log(`[${id}]: Add ${w.id}`);\r\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\r\n    dequeue();\r\n    return w.id;\r\n  };\r\n\r\n  const addJob = async (action, ...payload) => {\r\n    if (getNumWorkers() === 0) {\r\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\r\n    }\r\n    return queue(action, payload);\r\n  };\r\n\r\n  const terminate = async () => {\r\n    Object.keys(workers).forEach(async (wid) => {\r\n      await workers[wid].terminate();\r\n    });\r\n    jobQueue = [];\r\n  };\r\n\r\n  return {\r\n    addWorker,\r\n    addJob,\r\n    terminate,\r\n    getQueueLen,\r\n    getNumWorkers,\r\n  };\r\n};\r\n","'use strict';\r\n\r\nconst version = require('../../../package.json').version;\r\nconst defaultOptions = require('../../constants/defaultOptions');\r\n\r\n/*\r\n * Default options for browser worker\r\n */\r\nmodule.exports = {\r\n  ...defaultOptions,\r\n  workerPath: `https://cdn.jsdelivr.net/npm/tesseract.js@v${version}/dist/worker.min.js`,\r\n};\r\n","'use strict';\r\n\r\n/**\r\n *\r\n * Entry point for tesseract.js, should be the entry when bundling.\r\n *\r\n * @fileoverview entry point for tesseract.js\r\n * @author Kevin Kwok <antimatter15@gmail.com>\r\n * @author Guillermo Webster <gui@mit.edu>\r\n * @author Jerome Wu <jeromewus@gmail.com>\r\n */\r\nrequire('regenerator-runtime/runtime');\r\nconst createScheduler = require('./createScheduler');\r\nconst createWorker = require('./createWorker');\r\nconst Tesseract = require('./Tesseract');\r\nconst languages = require('./constants/languages');\r\nconst OEM = require('./constants/OEM');\r\nconst PSM = require('./constants/PSM');\r\nconst { setLogging } = require('./utils/log');\r\n\r\nmodule.exports = {\r\n  languages,\r\n  OEM,\r\n  PSM,\r\n  createScheduler,\r\n  createWorker,\r\n  setLogging,\r\n  ...Tesseract,\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = (key) => {\r\n  const env = {};\r\n\r\n  if (typeof WorkerGlobalScope !== 'undefined') {\r\n    env.type = 'webworker';\r\n  } else if (typeof document === 'object') {\r\n    env.type = 'browser';\r\n  } else if (typeof process === 'object' && typeof require === 'function') {\r\n    env.type = 'node';\r\n  }\r\n\r\n  if (typeof key === 'undefined') {\r\n    return env;\r\n  }\r\n\r\n  return env[key];\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  /*\r\n   * Use BlobURL for worker script by default\r\n   * TODO: remove this option\r\n   *\r\n   */\r\n  workerBlobURL: true,\r\n  logger: () => {},\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * send\r\n *\r\n * @name send\r\n * @function send packet to worker and create a job\r\n * @access public\r\n */\r\nmodule.exports = async (worker, packet) => {\r\n  worker.postMessage(packet);\r\n};\r\n","'use strict';\r\n\r\nlet logging = false;\r\n\r\nexports.logging = logging;\r\n\r\nexports.setLogging = (_logging) => {\r\n  logging = _logging;\r\n};\r\n\r\nexports.log = (...args) => (logging ? console.log.apply(this, args) : null);\r\n","'use strict';\r\n\r\n/**\r\n * terminateWorker\r\n *\r\n * @name terminateWorker\r\n * @function terminate worker\r\n * @access public\r\n */\r\nmodule.exports = (worker) => {\r\n  worker.terminate();\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import {createScheduler, addWorker, createWorker, PSM} from 'tesseract.js';\r\n\r\n\r\n// export async function processImages(files) {\r\n//     for (const file of files) {\r\n//         //clean up the image\r\n//         const cleanedImage = await cleanImage(file);\r\n\r\n//         //read and process the image\r\n//         try {\r\n//             const result = await Tesseract.recognize(\r\n//                 file, // Path or Blob of the image\r\n//                 'eng',     // Language code (English in this case)\r\n//                 {\r\n//                     logger: info => console.log(info) // Log progress\r\n//                 }\r\n//             );\r\n//             console.log('Extracted Text:', result.data.text);\r\n//             return result.data.text;\r\n//         } catch (error) {\r\n//             console.error('Error during OCR:', error);\r\n//             throw error;\r\n//         }\r\n\r\n//         //create the csv using results\r\n//     }\r\n// }\r\n\r\n\r\nexport async function processTestImages(files) {\r\n    console.log('Number of image files found:', files.length);\r\n    // Create a scheduler and workers\r\n    const scheduler = createScheduler();\r\n\r\n    const workerGen = async () => {\r\n        const worker = await createWorker(\"eng\", 1, { \r\n            logger: m => console.log(m), cachePath: \".\",\r\n            workerPath: chrome.runtime.getURL('node_modules/tesseract.js/dist/worker.min.js'),\r\n            corePath: chrome.runtime.getURL('node_modules/tesseract.js-core/tesseract-core-lstm.wasm.js'),\r\n            workerBlobURL: false,\r\n        });\r\n        await worker.setParameters({\r\n            tessedit_pageseg_mode: PSM.SPARSE_TEXT_OSD\r\n        });\r\n        scheduler.addWorker(worker);\r\n    };\r\n\r\n    const workerN = 7; //Adjustable worker pool for a huge batch\r\n    await Promise.all(Array(workerN).fill(0).map(async () => await workerGen())); // Create workers concurrently\r\n\r\n    // Process images in parallel\r\n    console.log('Processing images and performing OCR:');\r\n    \r\n    const jobPromises = files.map(async (file) => {\r\n        console.log(`Scheduling image processing for: ${file.name}`);\r\n\r\n        return scheduler.addJob('recognize', file, {}, {\r\n            text: true,\r\n            blocks: true,\r\n            hocr: false,\r\n            tsv: false,\r\n        })\r\n        .then(out => {\r\n            const wordsArray = [];\r\n            if (!out.data?.blocks) {\r\n                console.warn(`⚠️ No blocks found in OCR result for: ${file.name}`);\r\n                console.log(out)\r\n                return {\r\n                    imageName: file.webkitRelativePath || file.name,\r\n                    words: []\r\n                };\r\n            }\r\n            // Ensure blocks exist before iterating\r\n            if (out.data?.blocks) {\r\n                console.log(\"blocks have been ensured\")\r\n                out.data.blocks.forEach((block, blockIdx) => {\r\n                    block.paragraphs.forEach((para, paraIdx) => {\r\n                        const paragraphKey = `block${blockIdx}_paragraph${paraIdx}`;\r\n\r\n                        para.lines.forEach((line, lineIdx) => {\r\n                            const lineKey = `${paragraphKey}_line${lineIdx}`;\r\n\r\n                            line.words.forEach(word => {\r\n                                wordsArray.push({\r\n                                    word_text: word.text,\r\n                                    word_confidence: word.confidence,\r\n                                    word_choices: word.choices,\r\n                                    word_bbox: word.bbox,\r\n                                    unique_paragraph_key: paragraphKey,\r\n                                    unique_line_key: lineKey\r\n                                });\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n            return {\r\n                imageName: file.webkitRelativePath || file.name,\r\n                words: wordsArray\r\n            };\r\n        })\r\n        .catch(error => ({\r\n            imageName: file.webkitRelativePath || file.name,\r\n            error: error.message,\r\n        }));\r\n    });\r\n\r\n    const results = await Promise.all(jobPromises);\r\n    // Terminate workers and save results\r\n    await scheduler.terminate();\r\n\r\n    console.log('OCR processing completed.');\r\n    return results;\r\n\r\n}\r\n\r\nexport async function processTestImagesReg(files) {\r\n    console.log(`filename is ${files})`)\r\n    try {\r\n        if (!files) {\r\n            throw new Error(\"No files provided for OCR.\");\r\n        }\r\n\r\n        const imageFiles = Array.from(files).filter(file =>\r\n            file.type.startsWith('image/')\r\n        );\r\n\r\n        if (imageFiles.length === 0) {\r\n            throw new Error(\"No image files found in selected folder.\");\r\n        }\r\n\r\n        console.log(`📁 Folder contains ${imageFiles.length} image file(s).`);\r\n\r\n        const scheduler = createScheduler();\r\n        const workerCount = 7;\r\n\r\n        console.log('⚙️ Initializing workers...');\r\n        const workerPromises = [];\r\n\r\n        for (let i = 0; i < workerCount; i++) {\r\n            workerPromises.push(\r\n                (async () => {\r\n                    try {\r\n                        const worker = await createWorker('eng', 1, {\r\n                            logger: m => console.log(`Worker ${i + 1}:`, m),\r\n                            workerPath: chrome.runtime.getURL('node_modules/tesseract.js/dist/worker.min.js'),\r\n                            corePath: chrome.runtime.getURL('node_modules/tesseract.js-core/tesseract-core.wasm.js'),\r\n                            workerBlobURL: false,\r\n                        });\r\n                        scheduler.addWorker(worker);\r\n                    } catch (err) {\r\n                        console.error(`Error creating worker ${i + 1}:`, err);\r\n                    }\r\n                })()\r\n            );\r\n        }\r\n\r\n        await Promise.all(workerPromises);\r\n        console.log(`✅ ${workerCount} workers ready.`);\r\n\r\n        const jobPromises = imageFiles.map(async (file) => {\r\n            console.log(`Scheduling image processing for: ${file}`);\r\n            return scheduler.addJob('recognize', file, {rotateAuto: true,})\r\n                .then(out => ({\r\n                    imageName: file.webkitRelativePath || file.name,\r\n                    words: out.data.words\r\n                }))\r\n                .catch(error => ({\r\n                    imageName: file.webkitRelativePath || file.name,\r\n                    error: error.message,\r\n                }));\r\n\r\n\r\n\r\n\r\n        });\r\n\r\n        const results = await Promise.all(jobPromises);\r\n        console.log('✅ OCR complete for all image files.', results);\r\n\r\n        await scheduler.terminate();\r\n        console.log('🧹 Scheduler terminated. Workers cleaned up.');\r\n\r\n        return results;\r\n\r\n    } catch (err) {\r\n        console.error('💥 Error in processTestImages:', err);\r\n        throw err;\r\n    }\r\n}","import {processTestImages} from './imageProcessor.js'\r\n\r\n// document.getElementById('process-btn-test').addEventListener('click', async () => {\r\n//     const files = document.getElementById('bloodwork-files').files;\r\n//     //Filter files\r\n//     // Deal w/ image files (e.g., PNG, JPEG, etc.)\r\n//       const imageFiles = Array.from(files).filter(file => \r\n//         file.type.startsWith('image/')\r\n//     );\r\n\r\n//     // Handle PDF files (Convert to images)\r\n//     const pdfFiles = Array.from(files).filter(file => \r\n//         file.type === 'application/pdf'\r\n//     );\r\n\r\n//     //Convert Pdf files to Images\r\n\r\n//     //Flatten files into an array\r\n//     const allImages = [\r\n//         ...imageFiles,\r\n//         ...pdfFiles\r\n//     ]\r\n//     console.log('Files ready for processing', allImages);\r\n\r\n//     //run logic of external script\r\n//     const final_csv = await processImages(allImages)\r\n\r\n//     //create download reference and download csv\r\n//     const blob = new Blob([csv], {type: 'text/csv'});\r\n//     const url = URL.createObjectURL(blob);\r\n\r\n//     const a = document.createElement('a');\r\n//     a.href = url\r\n//     a.download = 'output.csv';\r\n//     a.click();\r\n    \r\n//     URL.revokeObjectURL(url);\r\n// });\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    document.getElementById('process-btn-test').addEventListener('click', async () => {\r\n        const files = document.getElementById('bloodwork-files').files;\r\n        //Filter files\r\n        // Deal w/ image files (e.g., PNG, JPEG, etc.)\r\n        // const imageFiles = Array.from(files).filter(file => \r\n        //     file.type.startsWith('image/')\r\n        // );\r\n\r\n        // // Handle PDF files (Convert to images)\r\n        // const pdfFiles = Array.from(files).filter(file => \r\n        //     file.type === 'application/pdf'\r\n        // );\r\n\r\n        //Convert Pdf files to Images\r\n\r\n        //Flatten files into an array\r\n        // const allImages = [\r\n        //     ...imageFiles,\r\n        //     ...pdfFiles\r\n        // ]\r\n\r\n        const imageFiles = Array.from(files).filter(file =>\r\n            file.type === 'image/png' || file.type === 'image/jpeg'\r\n        ); \r\n\r\n        console.log('Files ready for processing', imageFiles);\r\n        const final_data = await processTestImages(imageFiles)\r\n        \r\n        \r\n\r\n        // Convert your JavaScript object or array to a JSON string\r\n        const json = JSON.stringify(final_data, null, 2); // Pretty print with 2-space indentation\r\n\r\n        // Create a Blob from the JSON string\r\n        const blob = new Blob([json], { type: 'application/json' });\r\n\r\n        // Create a temporary download URL\r\n        const url = URL.createObjectURL(blob);\r\n\r\n        // Create an anchor element to trigger download\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = 'output.json';\r\n        a.click();\r\n\r\n        // Clean up the URL object to free memory\r\n        URL.revokeObjectURL(url);\r\n    });\r\n});\r\n"],"names":["readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","target","error","code","Error","readAsArrayBuffer","loadImage","async","image","data","test","atob","split","map","c","charCodeAt","resp","fetch","arrayBuffer","HTMLElement","tagName","src","poster","toBlob","OffscreenCanvas","convertToBlob","File","Blob","Uint8Array","module","exports","workerPath","workerBlobURL","worker","URL","type","Worker","createObjectURL","defaultOptions","spawnWorker","terminateWorker","onMessage","send","getId","jobCounter","id","_id","action","payload","resolveURL","s","window","location","href","options","opts","forEach","key","resolvePaths","createJob","log","OEM","workerCounter","langs","oem","LSTM_ONLY","_options","config","logger","errorHandler","promises","currentLangs","currentOem","currentConfig","lstmOnlyCore","DEFAULT","includes","legacyCore","workerResReject","workerResResolve","workerRes","event","message","startJob","jobId","workerId","loadLanguageInternal","_langs","langPath","dataPath","cachePath","cacheMethod","gzip","lstmOnly","legacyLang","initializeInternal","_oem","_config","status","promiseId","userJobId","resolveObj","load","console","warn","writeText","path","text","method","args","readText","encoding","removeFile","FS","reinitialize","TESSERACT_ONLY","TESSERACT_LSTM_COMBINED","filter","x","push","length","then","setParameters","params","recognize","output","detect","terminate","corePath","logging","catch","AFR","AMH","ARA","ASM","AZE","AZE_CYRL","BEL","BEN","BOD","BOS","BUL","CAT","CEB","CES","CHI_SIM","CHI_TRA","CHR","CYM","DAN","DEU","DZO","ELL","ENG","ENM","EPO","EST","EUS","FAS","FIN","FRA","FRK","FRM","GLE","GLG","GRC","GUJ","HAT","HEB","HIN","HRV","HUN","IKU","IND","ISL","ITA","ITA_OLD","JAV","JPN","KAN","KAT","KAT_OLD","KAZ","KHM","KIR","KOR","KUR","LAO","LAT","LAV","LIT","MAL","MAR","MKD","MLT","MSA","MYA","NEP","NLD","NOR","ORI","PAN","POL","POR","PUS","RON","RUS","SAN","SIN","SLK","SLV","SPA","SPA_OLD","SQI","SRP","SRP_LATN","SWA","SWE","SYR","TAM","TEL","TGK","TGL","THA","TIR","TUR","UIG","UKR","URD","UZB","UZB_CYRL","VIE","YID","prefix","cnt","Math","random","toString","slice","createWorker","finally","OSD_ONLY","AUTO_OSD","AUTO_ONLY","AUTO","SINGLE_COLUMN","SINGLE_BLOCK_VERT_TEXT","SINGLE_BLOCK","SINGLE_LINE","SINGLE_WORD","CIRCLE_WORD","SINGLE_CHAR","SPARSE_TEXT","SPARSE_TEXT_OSD","RAW_LINE","handler","onmessage","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","schedulerCounter","workers","runningWorkers","jobQueue","getNumWorkers","dequeue","wIds","queue","job","w","shift","apply","addWorker","addJob","wid","getQueueLen","version","createScheduler","Tesseract","languages","PSM","setLogging","env","WorkerGlobalScope","document","process","packet","postMessage","_logging","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","e","t","r","n","o","u","_regeneratorDefine2","f","p","y","G","v","a","d","bind","l","_regenerator","m","asyncGeneratorStep","_asyncToGenerator","arguments","_next","_throw","processTestImages","_x","_processTestImages","_callee4","files","scheduler","workerGen","jobPromises","results","_context4","_ref","_callee","_context","chrome","getURL","tessedit_pageseg_mode","all","Array","fill","_callee2","_context2","_ref3","_callee3","file","_context3","concat","blocks","hocr","tsv","out","_out$data","_out$data2","wordsArray","block","blockIdx","paragraphs","para","paraIdx","paragraphKey","lines","line","lineIdx","lineKey","words","word","word_text","word_confidence","confidence","word_choices","choices","word_bbox","bbox","unique_paragraph_key","unique_line_key","imageName","webkitRelativePath","_x3","addEventListener","getElementById","imageFiles","final_data","json","url","from","JSON","stringify","createElement","download","click","revokeObjectURL"],"sourceRoot":""}